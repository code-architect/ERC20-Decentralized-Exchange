{
	"id": "94658d1a85ae2ef499bcb9243bf99e19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CAC.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract CAC \r\n{\r\n    IERC20 public associatedToken;\r\n    uint price;\r\n    address owner;\r\n\r\n    constructor(IERC20 _token, uint _price) \r\n    {\r\n        associatedToken = _token;\r\n        owner = msg.sender;\r\n        price = _price;\r\n    }\r\n\r\n    //================================================================= Modifiers Start ==========================================================================//\r\n\r\n    modifier onlyOwner\r\n    {\r\n        require(msg.sender == owner, \"You are not the owner\");\r\n        _;\r\n    }\r\n\r\n    //================================================================= Modifiers Ends ===========================================================================//\r\n\r\n    function sell() external onlyOwner\r\n    {\r\n        uint allowance = associatedToken.allowance(msg.sender, address(this));\r\n        require(allowance > 0, \" You mush allow this contract to at least one token\");\r\n        bool sent = associatedToken.transferFrom(msg.sender, address(this), allowance);\r\n        require(sent, \"failed to send\");\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CAC.sol": {
				"CAC": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "associatedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CAC.sol\":126:1178  contract CAC ... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CAC.sol\":223:366  constructor(IERC20 _token, uint _price) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CAC.sol\":298:304  _token */\n  dup2\n    /* \"contracts/CAC.sol\":280:295  associatedToken */\n  0x00\n  dup1\n    /* \"contracts/CAC.sol\":280:304  associatedToken = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CAC.sol\":323:333  msg.sender */\n  caller\n    /* \"contracts/CAC.sol\":315:320  owner */\n  0x02\n  0x00\n    /* \"contracts/CAC.sol\":315:333  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CAC.sol\":352:358  _price */\n  dup1\n    /* \"contracts/CAC.sol\":344:349  price */\n  0x01\n    /* \"contracts/CAC.sol\":344:358  price = _price */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CAC.sol\":223:366  constructor(IERC20 _token, uint _price) ... */\n  pop\n  pop\n    /* \"contracts/CAC.sol\":126:1178  contract CAC ... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_24\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_12:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_26\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_13:\n    /* \"#utility.yul\":771:809   */\n  tag_28\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_29:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_14:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_31\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1094   */\ntag_15:\n    /* \"#utility.yul\":1054:1061   */\n  0x00\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1072:1088   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1100:1222   */\ntag_16:\n    /* \"#utility.yul\":1173:1197   */\n  tag_34\n    /* \"#utility.yul\":1191:1196   */\n  dup2\n    /* \"#utility.yul\":1173:1197   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1166:1171   */\n  dup2\n    /* \"#utility.yul\":1163:1198   */\n  eq\n    /* \"#utility.yul\":1153:1216   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1153:1216   */\ntag_35:\n    /* \"#utility.yul\":1100:1222   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1228:1371   */\ntag_17:\n    /* \"#utility.yul\":1285:1290   */\n  0x00\n    /* \"#utility.yul\":1316:1322   */\n  dup2\n    /* \"#utility.yul\":1310:1323   */\n  mload\n    /* \"#utility.yul\":1301:1323   */\n  swap1\n  pop\n    /* \"#utility.yul\":1332:1365   */\n  tag_37\n    /* \"#utility.yul\":1359:1364   */\n  dup2\n    /* \"#utility.yul\":1332:1365   */\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1228:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1912   */\ntag_3:\n    /* \"#utility.yul\":1470:1476   */\n  0x00\n    /* \"#utility.yul\":1478:1484   */\n  dup1\n    /* \"#utility.yul\":1527:1529   */\n  0x40\n    /* \"#utility.yul\":1515:1524   */\n  dup4\n    /* \"#utility.yul\":1506:1513   */\n  dup6\n    /* \"#utility.yul\":1502:1525   */\n  sub\n    /* \"#utility.yul\":1498:1530   */\n  slt\n    /* \"#utility.yul\":1495:1614   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1533:1612   */\n  tag_40\n  tag_8\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1495:1614   */\ntag_39:\n    /* \"#utility.yul\":1653:1654   */\n  0x00\n    /* \"#utility.yul\":1678:1756   */\n  tag_41\n    /* \"#utility.yul\":1748:1755   */\n  dup6\n    /* \"#utility.yul\":1739:1745   */\n  dup3\n    /* \"#utility.yul\":1728:1737   */\n  dup7\n    /* \"#utility.yul\":1724:1746   */\n  add\n    /* \"#utility.yul\":1678:1756   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1668:1756   */\n  swap3\n  pop\n    /* \"#utility.yul\":1624:1766   */\n  pop\n    /* \"#utility.yul\":1805:1807   */\n  0x20\n    /* \"#utility.yul\":1831:1895   */\n  tag_42\n    /* \"#utility.yul\":1887:1894   */\n  dup6\n    /* \"#utility.yul\":1878:1884   */\n  dup3\n    /* \"#utility.yul\":1867:1876   */\n  dup7\n    /* \"#utility.yul\":1863:1885   */\n  add\n    /* \"#utility.yul\":1831:1895   */\n  tag_17\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1821:1895   */\n  swap2\n  pop\n    /* \"#utility.yul\":1776:1905   */\n  pop\n    /* \"#utility.yul\":1377:1912   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/CAC.sol\":126:1178  contract CAC ... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CAC.sol\":126:1178  contract CAC ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x45710074\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3fc0d7b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CAC.sol\":826:1173  function sell() external onlyOwner... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/CAC.sol\":148:177  IERC20 public associatedToken */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CAC.sol\":826:1173  function sell() external onlyOwner... */\n    tag_6:\n        /* \"contracts/CAC.sol\":599:604  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CAC.sol\":585:604  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CAC.sol\":585:595  msg.sender */\n      caller\n        /* \"contracts/CAC.sol\":585:604  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CAC.sol\":577:630  require(msg.sender == owner, \"You are not the owner\") */\n      tag_12\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_13\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_12:\n        /* \"contracts/CAC.sol\":877:891  uint allowance */\n      0x00\n        /* \"contracts/CAC.sol\":894:909  associatedToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CAC.sol\":894:919  associatedToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/CAC.sol\":920:930  msg.sender */\n      caller\n        /* \"contracts/CAC.sol\":940:944  this */\n      address\n        /* \"contracts/CAC.sol\":894:946  associatedToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/CAC.sol\":877:946  uint allowance = associatedToken.allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"contracts/CAC.sol\":977:978  0 */\n      0x00\n        /* \"contracts/CAC.sol\":965:974  allowance */\n      dup2\n        /* \"contracts/CAC.sol\":965:978  allowance > 0 */\n      gt\n        /* \"contracts/CAC.sol\":957:1034  require(allowance > 0, \" You mush allow this contract to at least one token\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/CAC.sol\":1045:1054  bool sent */\n      0x00\n        /* \"contracts/CAC.sol\":1057:1072  associatedToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CAC.sol\":1057:1085  associatedToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/CAC.sol\":1086:1096  msg.sender */\n      caller\n        /* \"contracts/CAC.sol\":1106:1110  this */\n      address\n        /* \"contracts/CAC.sol\":1113:1122  allowance */\n      dup6\n        /* \"contracts/CAC.sol\":1057:1123  associatedToken.transferFrom(msg.sender, address(this), allowance) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/CAC.sol\":1045:1123  bool sent = associatedToken.transferFrom(msg.sender, address(this), allowance) */\n      swap1\n      pop\n        /* \"contracts/CAC.sol\":1142:1146  sent */\n      dup1\n        /* \"contracts/CAC.sol\":1134:1165  require(sent, \"failed to send\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"contracts/CAC.sol\":866:1173  {... */\n      pop\n      pop\n        /* \"contracts/CAC.sol\":826:1173  function sell() external onlyOwner... */\n      jump\t// out\n        /* \"contracts/CAC.sol\":148:177  IERC20 public associatedToken */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_34:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_35:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_36:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_63\n        /* \"#utility.yul\":306:340   */\n      tag_64\n        /* \"#utility.yul\":315:339   */\n      tag_65\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_34\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":306:340   */\n      tag_35\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":288:341   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_37:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_67\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_36\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_38:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_69\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_37\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_39:\n        /* \"#utility.yul\":732:783   */\n      tag_71\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_38\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_10:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_73\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_39\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1221   */\n    tag_40:\n        /* \"#utility.yul\":1136:1147   */\n      0x00\n        /* \"#utility.yul\":1170:1176   */\n      dup3\n        /* \"#utility.yul\":1165:1168   */\n      dup3\n        /* \"#utility.yul\":1158:1177   */\n      mstore\n        /* \"#utility.yul\":1210:1214   */\n      0x20\n        /* \"#utility.yul\":1205:1208   */\n      dup3\n        /* \"#utility.yul\":1201:1215   */\n      add\n        /* \"#utility.yul\":1186:1215   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:1398   */\n    tag_41:\n        /* \"#utility.yul\":1367:1390   */\n      0x596f7520617265206e6f7420746865206f776e65720000000000000000000000\n        /* \"#utility.yul\":1363:1364   */\n      0x00\n        /* \"#utility.yul\":1355:1361   */\n      dup3\n        /* \"#utility.yul\":1351:1365   */\n      add\n        /* \"#utility.yul\":1344:1391   */\n      mstore\n        /* \"#utility.yul\":1227:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1770   */\n    tag_42:\n        /* \"#utility.yul\":1546:1549   */\n      0x00\n        /* \"#utility.yul\":1567:1634   */\n      tag_77\n        /* \"#utility.yul\":1631:1633   */\n      0x15\n        /* \"#utility.yul\":1626:1629   */\n      dup4\n        /* \"#utility.yul\":1567:1634   */\n      tag_40\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1560:1634   */\n      swap2\n      pop\n        /* \"#utility.yul\":1643:1736   */\n      tag_78\n        /* \"#utility.yul\":1732:1735   */\n      dup3\n        /* \"#utility.yul\":1643:1736   */\n      tag_41\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1761:1763   */\n      0x20\n        /* \"#utility.yul\":1756:1759   */\n      dup3\n        /* \"#utility.yul\":1752:1764   */\n      add\n        /* \"#utility.yul\":1745:1764   */\n      swap1\n      pop\n        /* \"#utility.yul\":1404:1770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1776:2195   */\n    tag_14:\n        /* \"#utility.yul\":1942:1946   */\n      0x00\n        /* \"#utility.yul\":1980:1982   */\n      0x20\n        /* \"#utility.yul\":1969:1978   */\n      dup3\n        /* \"#utility.yul\":1965:1983   */\n      add\n        /* \"#utility.yul\":1957:1983   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2038   */\n      dup2\n        /* \"#utility.yul\":2023:2027   */\n      dup2\n        /* \"#utility.yul\":2019:2039   */\n      sub\n        /* \"#utility.yul\":2015:2016   */\n      0x00\n        /* \"#utility.yul\":2004:2013   */\n      dup4\n        /* \"#utility.yul\":2000:2017   */\n      add\n        /* \"#utility.yul\":1993:2040   */\n      mstore\n        /* \"#utility.yul\":2057:2188   */\n      tag_80\n        /* \"#utility.yul\":2183:2187   */\n      dup2\n        /* \"#utility.yul\":2057:2188   */\n      tag_42\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2049:2188   */\n      swap1\n      pop\n        /* \"#utility.yul\":1776:2195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2201:2297   */\n    tag_43:\n        /* \"#utility.yul\":2238:2245   */\n      0x00\n        /* \"#utility.yul\":2267:2291   */\n      tag_82\n        /* \"#utility.yul\":2285:2290   */\n      dup3\n        /* \"#utility.yul\":2267:2291   */\n      tag_34\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2256:2291   */\n      swap1\n      pop\n        /* \"#utility.yul\":2201:2297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2303:2421   */\n    tag_44:\n        /* \"#utility.yul\":2390:2414   */\n      tag_84\n        /* \"#utility.yul\":2408:2413   */\n      dup2\n        /* \"#utility.yul\":2390:2414   */\n      tag_43\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2385:2388   */\n      dup3\n        /* \"#utility.yul\":2378:2415   */\n      mstore\n        /* \"#utility.yul\":2303:2421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2427:2759   */\n    tag_17:\n        /* \"#utility.yul\":2548:2552   */\n      0x00\n        /* \"#utility.yul\":2586:2588   */\n      0x40\n        /* \"#utility.yul\":2575:2584   */\n      dup3\n        /* \"#utility.yul\":2571:2589   */\n      add\n        /* \"#utility.yul\":2563:2589   */\n      swap1\n      pop\n        /* \"#utility.yul\":2599:2670   */\n      tag_86\n        /* \"#utility.yul\":2667:2668   */\n      0x00\n        /* \"#utility.yul\":2656:2665   */\n      dup4\n        /* \"#utility.yul\":2652:2669   */\n      add\n        /* \"#utility.yul\":2643:2649   */\n      dup6\n        /* \"#utility.yul\":2599:2670   */\n      tag_44\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2680:2752   */\n      tag_87\n        /* \"#utility.yul\":2748:2750   */\n      0x20\n        /* \"#utility.yul\":2737:2746   */\n      dup4\n        /* \"#utility.yul\":2733:2751   */\n      add\n        /* \"#utility.yul\":2724:2730   */\n      dup5\n        /* \"#utility.yul\":2680:2752   */\n      tag_44\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2427:2759   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2963   */\n    tag_46:\n        /* \"#utility.yul\":2955:2956   */\n      0x00\n        /* \"#utility.yul\":2952:2953   */\n      dup1\n        /* \"#utility.yul\":2945:2957   */\n      revert\n        /* \"#utility.yul\":3092:3169   */\n    tag_48:\n        /* \"#utility.yul\":3129:3136   */\n      0x00\n        /* \"#utility.yul\":3158:3163   */\n      dup2\n        /* \"#utility.yul\":3147:3163   */\n      swap1\n      pop\n        /* \"#utility.yul\":3092:3169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3297   */\n    tag_49:\n        /* \"#utility.yul\":3248:3272   */\n      tag_93\n        /* \"#utility.yul\":3266:3271   */\n      dup2\n        /* \"#utility.yul\":3248:3272   */\n      tag_48\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3241:3246   */\n      dup2\n        /* \"#utility.yul\":3238:3273   */\n      eq\n        /* \"#utility.yul\":3228:3291   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3284:3285   */\n      dup1\n        /* \"#utility.yul\":3277:3289   */\n      revert\n        /* \"#utility.yul\":3228:3291   */\n    tag_94:\n        /* \"#utility.yul\":3175:3297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3446   */\n    tag_50:\n        /* \"#utility.yul\":3360:3365   */\n      0x00\n        /* \"#utility.yul\":3391:3397   */\n      dup2\n        /* \"#utility.yul\":3385:3398   */\n      mload\n        /* \"#utility.yul\":3376:3398   */\n      swap1\n      pop\n        /* \"#utility.yul\":3407:3440   */\n      tag_96\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3407:3440   */\n      tag_49\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3303:3446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3452:3803   */\n    tag_21:\n        /* \"#utility.yul\":3522:3528   */\n      0x00\n        /* \"#utility.yul\":3571:3573   */\n      0x20\n        /* \"#utility.yul\":3559:3568   */\n      dup3\n        /* \"#utility.yul\":3550:3557   */\n      dup5\n        /* \"#utility.yul\":3546:3569   */\n      sub\n        /* \"#utility.yul\":3542:3574   */\n      slt\n        /* \"#utility.yul\":3539:3658   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3577:3656   */\n      tag_99\n      tag_46\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3539:3658   */\n    tag_98:\n        /* \"#utility.yul\":3697:3698   */\n      0x00\n        /* \"#utility.yul\":3722:3786   */\n      tag_100\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3769:3775   */\n      dup3\n        /* \"#utility.yul\":3758:3767   */\n      dup6\n        /* \"#utility.yul\":3754:3776   */\n      add\n        /* \"#utility.yul\":3722:3786   */\n      tag_50\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3712:3786   */\n      swap2\n      pop\n        /* \"#utility.yul\":3668:3796   */\n      pop\n        /* \"#utility.yul\":3452:3803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3809:4047   */\n    tag_51:\n        /* \"#utility.yul\":3949:3983   */\n      0x20596f75206d75736820616c6c6f77207468697320636f6e747261637420746f\n        /* \"#utility.yul\":3945:3946   */\n      0x00\n        /* \"#utility.yul\":3937:3943   */\n      dup3\n        /* \"#utility.yul\":3933:3947   */\n      add\n        /* \"#utility.yul\":3926:3984   */\n      mstore\n        /* \"#utility.yul\":4018:4039   */\n      0x206174206c65617374206f6e6520746f6b656e00000000000000000000000000\n        /* \"#utility.yul\":4013:4015   */\n      0x20\n        /* \"#utility.yul\":4005:4011   */\n      dup3\n        /* \"#utility.yul\":4001:4016   */\n      add\n        /* \"#utility.yul\":3994:4040   */\n      mstore\n        /* \"#utility.yul\":3809:4047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4053:4419   */\n    tag_52:\n        /* \"#utility.yul\":4195:4198   */\n      0x00\n        /* \"#utility.yul\":4216:4283   */\n      tag_103\n        /* \"#utility.yul\":4280:4282   */\n      0x33\n        /* \"#utility.yul\":4275:4278   */\n      dup4\n        /* \"#utility.yul\":4216:4283   */\n      tag_40\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4209:4283   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4385   */\n      tag_104\n        /* \"#utility.yul\":4381:4384   */\n      dup3\n        /* \"#utility.yul\":4292:4385   */\n      tag_51\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4410:4412   */\n      0x40\n        /* \"#utility.yul\":4405:4408   */\n      dup3\n        /* \"#utility.yul\":4401:4413   */\n      add\n        /* \"#utility.yul\":4394:4413   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4425:4844   */\n    tag_24:\n        /* \"#utility.yul\":4591:4595   */\n      0x00\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4618:4627   */\n      dup3\n        /* \"#utility.yul\":4614:4632   */\n      add\n        /* \"#utility.yul\":4606:4632   */\n      swap1\n      pop\n        /* \"#utility.yul\":4678:4687   */\n      dup2\n        /* \"#utility.yul\":4672:4676   */\n      dup2\n        /* \"#utility.yul\":4668:4688   */\n      sub\n        /* \"#utility.yul\":4664:4665   */\n      0x00\n        /* \"#utility.yul\":4653:4662   */\n      dup4\n        /* \"#utility.yul\":4649:4666   */\n      add\n        /* \"#utility.yul\":4642:4689   */\n      mstore\n        /* \"#utility.yul\":4706:4837   */\n      tag_106\n        /* \"#utility.yul\":4832:4836   */\n      dup2\n        /* \"#utility.yul\":4706:4837   */\n      tag_52\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4698:4837   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4968   */\n    tag_53:\n        /* \"#utility.yul\":4937:4961   */\n      tag_108\n        /* \"#utility.yul\":4955:4960   */\n      dup2\n        /* \"#utility.yul\":4937:4961   */\n      tag_48\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4932:4935   */\n      dup3\n        /* \"#utility.yul\":4925:4962   */\n      mstore\n        /* \"#utility.yul\":4850:4968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4974:5416   */\n    tag_26:\n        /* \"#utility.yul\":5123:5127   */\n      0x00\n        /* \"#utility.yul\":5161:5163   */\n      0x60\n        /* \"#utility.yul\":5150:5159   */\n      dup3\n        /* \"#utility.yul\":5146:5164   */\n      add\n        /* \"#utility.yul\":5138:5164   */\n      swap1\n      pop\n        /* \"#utility.yul\":5174:5245   */\n      tag_110\n        /* \"#utility.yul\":5242:5243   */\n      0x00\n        /* \"#utility.yul\":5231:5240   */\n      dup4\n        /* \"#utility.yul\":5227:5244   */\n      add\n        /* \"#utility.yul\":5218:5224   */\n      dup7\n        /* \"#utility.yul\":5174:5245   */\n      tag_44\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":5255:5327   */\n      tag_111\n        /* \"#utility.yul\":5323:5325   */\n      0x20\n        /* \"#utility.yul\":5312:5321   */\n      dup4\n        /* \"#utility.yul\":5308:5326   */\n      add\n        /* \"#utility.yul\":5299:5305   */\n      dup6\n        /* \"#utility.yul\":5255:5327   */\n      tag_44\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":5337:5409   */\n      tag_112\n        /* \"#utility.yul\":5405:5407   */\n      0x40\n        /* \"#utility.yul\":5394:5403   */\n      dup4\n        /* \"#utility.yul\":5390:5408   */\n      add\n        /* \"#utility.yul\":5381:5387   */\n      dup5\n        /* \"#utility.yul\":5337:5409   */\n      tag_53\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4974:5416   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5422:5512   */\n    tag_54:\n        /* \"#utility.yul\":5456:5463   */\n      0x00\n        /* \"#utility.yul\":5499:5504   */\n      dup2\n        /* \"#utility.yul\":5492:5505   */\n      iszero\n        /* \"#utility.yul\":5485:5506   */\n      iszero\n        /* \"#utility.yul\":5474:5506   */\n      swap1\n      pop\n        /* \"#utility.yul\":5422:5512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5518:5634   */\n    tag_55:\n        /* \"#utility.yul\":5588:5609   */\n      tag_115\n        /* \"#utility.yul\":5603:5608   */\n      dup2\n        /* \"#utility.yul\":5588:5609   */\n      tag_54\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":5581:5586   */\n      dup2\n        /* \"#utility.yul\":5578:5610   */\n      eq\n        /* \"#utility.yul\":5568:5628   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":5624:5625   */\n      0x00\n        /* \"#utility.yul\":5621:5622   */\n      dup1\n        /* \"#utility.yul\":5614:5626   */\n      revert\n        /* \"#utility.yul\":5568:5628   */\n    tag_116:\n        /* \"#utility.yul\":5518:5634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5640:5777   */\n    tag_56:\n        /* \"#utility.yul\":5694:5699   */\n      0x00\n        /* \"#utility.yul\":5725:5731   */\n      dup2\n        /* \"#utility.yul\":5719:5732   */\n      mload\n        /* \"#utility.yul\":5710:5732   */\n      swap1\n      pop\n        /* \"#utility.yul\":5741:5771   */\n      tag_118\n        /* \"#utility.yul\":5765:5770   */\n      dup2\n        /* \"#utility.yul\":5741:5771   */\n      tag_55\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5640:5777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5783:6128   */\n    tag_30:\n        /* \"#utility.yul\":5850:5856   */\n      0x00\n        /* \"#utility.yul\":5899:5901   */\n      0x20\n        /* \"#utility.yul\":5887:5896   */\n      dup3\n        /* \"#utility.yul\":5878:5885   */\n      dup5\n        /* \"#utility.yul\":5874:5897   */\n      sub\n        /* \"#utility.yul\":5870:5902   */\n      slt\n        /* \"#utility.yul\":5867:5986   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":5905:5984   */\n      tag_121\n      tag_46\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":5867:5986   */\n    tag_120:\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6050:6111   */\n      tag_122\n        /* \"#utility.yul\":6103:6110   */\n      dup5\n        /* \"#utility.yul\":6094:6100   */\n      dup3\n        /* \"#utility.yul\":6083:6092   */\n      dup6\n        /* \"#utility.yul\":6079:6101   */\n      add\n        /* \"#utility.yul\":6050:6111   */\n      tag_56\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":6040:6111   */\n      swap2\n      pop\n        /* \"#utility.yul\":5996:6121   */\n      pop\n        /* \"#utility.yul\":5783:6128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6134:6298   */\n    tag_57:\n        /* \"#utility.yul\":6274:6290   */\n      0x6661696c656420746f2073656e64000000000000000000000000000000000000\n        /* \"#utility.yul\":6270:6271   */\n      0x00\n        /* \"#utility.yul\":6262:6268   */\n      dup3\n        /* \"#utility.yul\":6258:6272   */\n      add\n        /* \"#utility.yul\":6251:6291   */\n      mstore\n        /* \"#utility.yul\":6134:6298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6670   */\n    tag_58:\n        /* \"#utility.yul\":6446:6449   */\n      0x00\n        /* \"#utility.yul\":6467:6534   */\n      tag_125\n        /* \"#utility.yul\":6531:6533   */\n      0x0e\n        /* \"#utility.yul\":6526:6529   */\n      dup4\n        /* \"#utility.yul\":6467:6534   */\n      tag_40\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":6460:6534   */\n      swap2\n      pop\n        /* \"#utility.yul\":6543:6636   */\n      tag_126\n        /* \"#utility.yul\":6632:6635   */\n      dup3\n        /* \"#utility.yul\":6543:6636   */\n      tag_57\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":6661:6663   */\n      0x20\n        /* \"#utility.yul\":6656:6659   */\n      dup3\n        /* \"#utility.yul\":6652:6664   */\n      add\n        /* \"#utility.yul\":6645:6664   */\n      swap1\n      pop\n        /* \"#utility.yul\":6304:6670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6676:7095   */\n    tag_33:\n        /* \"#utility.yul\":6842:6846   */\n      0x00\n        /* \"#utility.yul\":6880:6882   */\n      0x20\n        /* \"#utility.yul\":6869:6878   */\n      dup3\n        /* \"#utility.yul\":6865:6883   */\n      add\n        /* \"#utility.yul\":6857:6883   */\n      swap1\n      pop\n        /* \"#utility.yul\":6929:6938   */\n      dup2\n        /* \"#utility.yul\":6923:6927   */\n      dup2\n        /* \"#utility.yul\":6919:6939   */\n      sub\n        /* \"#utility.yul\":6915:6916   */\n      0x00\n        /* \"#utility.yul\":6904:6913   */\n      dup4\n        /* \"#utility.yul\":6900:6917   */\n      add\n        /* \"#utility.yul\":6893:6940   */\n      mstore\n        /* \"#utility.yul\":6957:7088   */\n      tag_128\n        /* \"#utility.yul\":7083:7087   */\n      dup2\n        /* \"#utility.yul\":6957:7088   */\n      tag_58\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":6949:7088   */\n      swap1\n      pop\n        /* \"#utility.yul\":6676:7095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209d267aca20e904c32fb1bac3e23e4b9e68dbd4159f0d363d96c5f5a9ab335b2664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_817": {
									"entryPoint": null,
									"id": 817,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$729t_uint256_fromMemory": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$729": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$729": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1915:6",
										"nodeType": "YulBlock",
										"src": "0:1915:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$729",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$729",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$729",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$729",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1062:32:6",
													"nodeType": "YulBlock",
													"src": "1062:32:6",
													"statements": [
														{
															"nativeSrc": "1072:16:6",
															"nodeType": "YulAssignment",
															"src": "1072:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1083:5:6",
																"nodeType": "YulIdentifier",
																"src": "1083:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1072:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1072:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1017:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:6",
														"nodeType": "YulTypedName",
														"src": "1044:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1054:7:6",
														"nodeType": "YulTypedName",
														"src": "1054:7:6",
														"type": ""
													}
												],
												"src": "1017:77:6"
											},
											{
												"body": {
													"nativeSrc": "1143:79:6",
													"nodeType": "YulBlock",
													"src": "1143:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1200:16:6",
																"nodeType": "YulBlock",
																"src": "1200:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1209:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1212:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1202:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:6"
																			},
																			"nativeSrc": "1202:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:6"
																		},
																		"nativeSrc": "1202:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1166:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1191:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1173:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1173:17:6"
																				},
																				"nativeSrc": "1173:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1173:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1163:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1163:2:6"
																		},
																		"nativeSrc": "1163:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:6"
																},
																"nativeSrc": "1156:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1156:43:6"
															},
															"nativeSrc": "1153:63:6",
															"nodeType": "YulIf",
															"src": "1153:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1100:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1136:5:6",
														"nodeType": "YulTypedName",
														"src": "1136:5:6",
														"type": ""
													}
												],
												"src": "1100:122:6"
											},
											{
												"body": {
													"nativeSrc": "1291:80:6",
													"nodeType": "YulBlock",
													"src": "1291:80:6",
													"statements": [
														{
															"nativeSrc": "1301:22:6",
															"nodeType": "YulAssignment",
															"src": "1301:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1316:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1316:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1310:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1310:5:6"
																},
																"nativeSrc": "1310:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1310:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1301:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1301:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1359:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1359:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1332:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1332:26:6"
																},
																"nativeSrc": "1332:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1332:33:6"
															},
															"nativeSrc": "1332:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1332:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1228:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1269:6:6",
														"nodeType": "YulTypedName",
														"src": "1269:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1277:3:6",
														"nodeType": "YulTypedName",
														"src": "1277:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1285:5:6",
														"nodeType": "YulTypedName",
														"src": "1285:5:6",
														"type": ""
													}
												],
												"src": "1228:143:6"
											},
											{
												"body": {
													"nativeSrc": "1485:427:6",
													"nodeType": "YulBlock",
													"src": "1485:427:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1531:83:6",
																"nodeType": "YulBlock",
																"src": "1531:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1533:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1533:77:6"
																			},
																			"nativeSrc": "1533:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1533:79:6"
																		},
																		"nativeSrc": "1533:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1533:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1506:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1506:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1515:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1515:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1502:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:6"
																		},
																		"nativeSrc": "1502:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1527:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1527:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1498:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:6"
																},
																"nativeSrc": "1498:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1498:32:6"
															},
															"nativeSrc": "1495:119:6",
															"nodeType": "YulIf",
															"src": "1495:119:6"
														},
														{
															"nativeSrc": "1624:142:6",
															"nodeType": "YulBlock",
															"src": "1624:142:6",
															"statements": [
																{
																	"nativeSrc": "1639:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1639:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1653:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1653:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1643:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1643:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1668:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1668:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1728:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1728:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1739:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1739:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1724:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1724:3:6"
																				},
																				"nativeSrc": "1724:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1724:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1748:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1748:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
																			"nativeSrc": "1678:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1678:45:6"
																		},
																		"nativeSrc": "1678:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1678:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1668:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1668:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1776:129:6",
															"nodeType": "YulBlock",
															"src": "1776:129:6",
															"statements": [
																{
																	"nativeSrc": "1791:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1791:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1805:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1805:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1795:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1795:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1821:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1821:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1867:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1867:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1878:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1878:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1863:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1863:3:6"
																				},
																				"nativeSrc": "1863:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1863:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1887:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1887:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1831:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1831:31:6"
																		},
																		"nativeSrc": "1831:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1831:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1821:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1821:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$729t_uint256_fromMemory",
												"nativeSrc": "1377:535:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1447:9:6",
														"nodeType": "YulTypedName",
														"src": "1447:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1458:7:6",
														"nodeType": "YulTypedName",
														"src": "1458:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1470:6:6",
														"nodeType": "YulTypedName",
														"src": "1470:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1478:6:6",
														"nodeType": "YulTypedName",
														"src": "1478:6:6",
														"type": ""
													}
												],
												"src": "1377:535:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$729_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$729(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$729t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161080438038061080483398181016040528101906100319190610160565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550505061019e565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100eb826100c2565b9050919050565b5f6100fc826100e1565b9050919050565b61010c816100f2565b8114610116575f80fd5b50565b5f8151905061012781610103565b92915050565b5f819050919050565b61013f8161012d565b8114610149575f80fd5b50565b5f8151905061015a81610136565b92915050565b5f8060408385031215610176576101756100be565b5b5f61018385828601610119565b92505060206101948582860161014c565b9150509250929050565b610659806101ab5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80634571007414610038578063b3fc0d7b14610042575b5f80fd5b610040610060565b005b61004a6102b2565b604051610057919061034f565b60405180910390f35b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e6906103c2565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161014b929190610400565b602060405180830381865afa158015610166573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018a919061045e565b90505f81116101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c5906104f9565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161022c93929190610526565b6020604051808303815f875af1158015610248573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026c9190610590565b9050806102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a590610605565b60405180910390fd5b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61031761031261030d846102d5565b6102f4565b6102d5565b9050919050565b5f610328826102fd565b9050919050565b5f6103398261031e565b9050919050565b6103498161032f565b82525050565b5f6020820190506103625f830184610340565b92915050565b5f82825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e657200000000000000000000005f82015250565b5f6103ac601583610368565b91506103b782610378565b602082019050919050565b5f6020820190508181035f8301526103d9816103a0565b9050919050565b5f6103ea826102d5565b9050919050565b6103fa816103e0565b82525050565b5f6040820190506104135f8301856103f1565b61042060208301846103f1565b9392505050565b5f80fd5b5f819050919050565b61043d8161042b565b8114610447575f80fd5b50565b5f8151905061045881610434565b92915050565b5f6020828403121561047357610472610427565b5b5f6104808482850161044a565b91505092915050565b7f20596f75206d75736820616c6c6f77207468697320636f6e747261637420746f5f8201527f206174206c65617374206f6e6520746f6b656e00000000000000000000000000602082015250565b5f6104e3603383610368565b91506104ee82610489565b604082019050919050565b5f6020820190508181035f830152610510816104d7565b9050919050565b6105208161042b565b82525050565b5f6060820190506105395f8301866103f1565b61054660208301856103f1565b6105536040830184610517565b949350505050565b5f8115159050919050565b61056f8161055b565b8114610579575f80fd5b50565b5f8151905061058a81610566565b92915050565b5f602082840312156105a5576105a4610427565b5b5f6105b28482850161057c565b91505092915050565b7f6661696c656420746f2073656e640000000000000000000000000000000000005f82015250565b5f6105ef600e83610368565b91506105fa826105bb565b602082019050919050565b5f6020820190508181035f83015261061c816105e3565b905091905056fea26469706673582212209d267aca20e904c32fb1bac3e23e4b9e68dbd4159f0d363d96c5f5a9ab335b2664736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x804 CODESIZE SUB DUP1 PUSH2 0x804 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x160 JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x19E JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEB DUP3 PUSH2 0xC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFC DUP3 PUSH2 0xE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C DUP2 PUSH2 0xF2 JUMP JUMPDEST DUP2 EQ PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x127 DUP2 PUSH2 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x12D JUMP JUMPDEST DUP2 EQ PUSH2 0x149 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15A DUP2 PUSH2 0x136 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x176 JUMPI PUSH2 0x175 PUSH2 0xBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x183 DUP6 DUP3 DUP7 ADD PUSH2 0x119 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x194 DUP6 DUP3 DUP7 ADD PUSH2 0x14C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x659 DUP1 PUSH2 0x1AB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45710074 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xB3FC0D7B EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B SWAP3 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP1 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x248 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP1 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x317 PUSH2 0x312 PUSH2 0x30D DUP5 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x328 DUP3 PUSH2 0x2FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x339 DUP3 PUSH2 0x31E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349 DUP2 PUSH2 0x32F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x362 PUSH0 DUP4 ADD DUP5 PUSH2 0x340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3AC PUSH1 0x15 DUP4 PUSH2 0x368 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B7 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3D9 DUP2 PUSH2 0x3A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3EA DUP3 PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FA DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x413 PUSH0 DUP4 ADD DUP6 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x420 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x42B JUMP JUMPDEST DUP2 EQ PUSH2 0x447 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x458 DUP2 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x473 JUMPI PUSH2 0x472 PUSH2 0x427 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x480 DUP5 DUP3 DUP6 ADD PUSH2 0x44A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20596F75206D75736820616C6C6F77207468697320636F6E747261637420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x206174206C65617374206F6E6520746F6B656E00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E3 PUSH1 0x33 DUP4 PUSH2 0x368 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EE DUP3 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x510 DUP2 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x520 DUP2 PUSH2 0x42B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x539 PUSH0 DUP4 ADD DUP7 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x546 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x553 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x517 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56F DUP2 PUSH2 0x55B JUMP JUMPDEST DUP2 EQ PUSH2 0x579 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x58A DUP2 PUSH2 0x566 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A5 JUMPI PUSH2 0x5A4 PUSH2 0x427 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B2 DUP5 DUP3 DUP6 ADD PUSH2 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5EF PUSH1 0xE DUP4 PUSH2 0x368 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FA DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x61C DUP2 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x26 PUSH27 0xCA20E904C32FB1BAC3E23E4B9E68DBD4159F0D363D96C5F5A9AB33 JUMPDEST 0x26 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "126:1052:5:-:0;;;223:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;298:6;280:15;;:24;;;;;;;;;;;;;;;;;;323:10;315:5;;:18;;;;;;;;;;;;;;;;;;352:6;344:5;:14;;;;223:143;;126:1052;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:143::-;1285:5;1316:6;1310:13;1301:22;;1332:33;1359:5;1332:33;:::i;:::-;1228:143;;;;:::o;1377:535::-;1470:6;1478;1527:2;1515:9;1506:7;1502:23;1498:32;1495:119;;;1533:79;;:::i;:::-;1495:119;1653:1;1678:78;1748:7;1739:6;1728:9;1724:22;1678:78;:::i;:::-;1668:88;;1624:142;1805:2;1831:64;1887:7;1878:6;1867:9;1863:22;1831:64;:::i;:::-;1821:74;;1776:129;1377:535;;;;;:::o;126:1052:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@associatedToken_791": {
									"entryPoint": 690,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sell_872": {
									"entryPoint": 96,
									"id": 872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7098:6",
										"nodeType": "YulBlock",
										"src": "0:7098:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "171:28:6",
													"nodeType": "YulBlock",
													"src": "171:28:6",
													"statements": [
														{
															"nativeSrc": "181:12:6",
															"nodeType": "YulAssignment",
															"src": "181:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:6",
																"nodeType": "YulIdentifier",
																"src": "188:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:6",
														"nodeType": "YulTypedName",
														"src": "157:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:6",
														"nodeType": "YulTypedName",
														"src": "167:3:6",
														"type": ""
													}
												],
												"src": "139:60:6"
											},
											{
												"body": {
													"nativeSrc": "265:82:6",
													"nodeType": "YulBlock",
													"src": "265:82:6",
													"statements": [
														{
															"nativeSrc": "275:66:6",
															"nodeType": "YulAssignment",
															"src": "275:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:6"
																				},
																				"nativeSrc": "315:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:6"
																		},
																		"nativeSrc": "306:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:6"
																},
																"nativeSrc": "288:53:6",
																"nodeType": "YulFunctionCall",
																"src": "288:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:6",
														"nodeType": "YulTypedName",
														"src": "245:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:6",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													}
												],
												"src": "205:142:6"
											},
											{
												"body": {
													"nativeSrc": "413:66:6",
													"nodeType": "YulBlock",
													"src": "413:66:6",
													"statements": [
														{
															"nativeSrc": "423:50:6",
															"nodeType": "YulAssignment",
															"src": "423:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:6"
																},
																"nativeSrc": "436:37:6",
																"nodeType": "YulFunctionCall",
																"src": "436:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:6",
														"nodeType": "YulTypedName",
														"src": "393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:6",
														"nodeType": "YulTypedName",
														"src": "403:9:6",
														"type": ""
													}
												],
												"src": "353:126:6"
											},
											{
												"body": {
													"nativeSrc": "559:66:6",
													"nodeType": "YulBlock",
													"src": "559:66:6",
													"statements": [
														{
															"nativeSrc": "569:50:6",
															"nodeType": "YulAssignment",
															"src": "569:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:6"
																},
																"nativeSrc": "582:37:6",
																"nodeType": "YulFunctionCall",
																"src": "582:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "485:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:6",
														"nodeType": "YulTypedName",
														"src": "539:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:6",
														"nodeType": "YulTypedName",
														"src": "549:9:6",
														"type": ""
													}
												],
												"src": "485:140:6"
											},
											{
												"body": {
													"nativeSrc": "710:80:6",
													"nodeType": "YulBlock",
													"src": "710:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "732:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:6"
																		},
																		"nativeSrc": "732:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:6"
																},
																"nativeSrc": "720:64:6",
																"nodeType": "YulFunctionCall",
																"src": "720:64:6"
															},
															"nativeSrc": "720:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "631:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:6",
														"nodeType": "YulTypedName",
														"src": "698:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:6",
														"nodeType": "YulTypedName",
														"src": "705:3:6",
														"type": ""
													}
												],
												"src": "631:159:6"
											},
											{
												"body": {
													"nativeSrc": "908:138:6",
													"nodeType": "YulBlock",
													"src": "908:138:6",
													"statements": [
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:6",
																		"nodeType": "YulLiteral",
																		"src": "941:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:6"
																		},
																		"nativeSrc": "1021:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "954:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:6"
																},
																"nativeSrc": "954:85:6",
																"nodeType": "YulFunctionCall",
																"src": "954:85:6"
															},
															"nativeSrc": "954:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:6",
														"nodeType": "YulTypedName",
														"src": "880:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:6",
														"nodeType": "YulTypedName",
														"src": "892:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:6",
														"nodeType": "YulTypedName",
														"src": "903:4:6",
														"type": ""
													}
												],
												"src": "796:250:6"
											},
											{
												"body": {
													"nativeSrc": "1148:73:6",
													"nodeType": "YulBlock",
													"src": "1148:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1165:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1165:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1170:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1170:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1158:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1158:6:6"
																},
																"nativeSrc": "1158:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1158:19:6"
															},
															"nativeSrc": "1158:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1158:19:6"
														},
														{
															"nativeSrc": "1186:29:6",
															"nodeType": "YulAssignment",
															"src": "1186:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1210:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1201:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:6"
																},
																"nativeSrc": "1201:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1201:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1186:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1186:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1052:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1120:3:6",
														"nodeType": "YulTypedName",
														"src": "1120:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1125:6:6",
														"nodeType": "YulTypedName",
														"src": "1125:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1136:11:6",
														"nodeType": "YulTypedName",
														"src": "1136:11:6",
														"type": ""
													}
												],
												"src": "1052:169:6"
											},
											{
												"body": {
													"nativeSrc": "1333:65:6",
													"nodeType": "YulBlock",
													"src": "1333:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1355:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1355:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1363:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1363:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1351:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1351:3:6"
																		},
																		"nativeSrc": "1351:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1351:14:6"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1367:23:6",
																		"nodeType": "YulLiteral",
																		"src": "1367:23:6",
																		"type": "",
																		"value": "You are not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1344:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:6"
																},
																"nativeSrc": "1344:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1344:47:6"
															},
															"nativeSrc": "1344:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1344:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
												"nativeSrc": "1227:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1325:6:6",
														"nodeType": "YulTypedName",
														"src": "1325:6:6",
														"type": ""
													}
												],
												"src": "1227:171:6"
											},
											{
												"body": {
													"nativeSrc": "1550:220:6",
													"nodeType": "YulBlock",
													"src": "1550:220:6",
													"statements": [
														{
															"nativeSrc": "1560:74:6",
															"nodeType": "YulAssignment",
															"src": "1560:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1626:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1626:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1567:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "1567:58:6"
																},
																"nativeSrc": "1567:67:6",
																"nodeType": "YulFunctionCall",
																"src": "1567:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1560:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1560:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1732:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1732:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																	"nativeSrc": "1643:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "1643:88:6"
																},
																"nativeSrc": "1643:93:6",
																"nodeType": "YulFunctionCall",
																"src": "1643:93:6"
															},
															"nativeSrc": "1643:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "1643:93:6"
														},
														{
															"nativeSrc": "1745:19:6",
															"nodeType": "YulAssignment",
															"src": "1745:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1756:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1756:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1761:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1752:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:6"
																},
																"nativeSrc": "1752:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1752:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1745:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1745:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1404:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1538:3:6",
														"nodeType": "YulTypedName",
														"src": "1538:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1546:3:6",
														"nodeType": "YulTypedName",
														"src": "1546:3:6",
														"type": ""
													}
												],
												"src": "1404:366:6"
											},
											{
												"body": {
													"nativeSrc": "1947:248:6",
													"nodeType": "YulBlock",
													"src": "1947:248:6",
													"statements": [
														{
															"nativeSrc": "1957:26:6",
															"nodeType": "YulAssignment",
															"src": "1957:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1969:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1969:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1980:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1980:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1965:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1965:3:6"
																},
																"nativeSrc": "1965:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1965:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1957:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1957:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2004:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2004:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2015:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2015:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2000:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:6"
																		},
																		"nativeSrc": "2000:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2000:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2023:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2023:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2029:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2029:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2019:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:6"
																		},
																		"nativeSrc": "2019:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2019:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:6"
																},
																"nativeSrc": "1993:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1993:47:6"
															},
															"nativeSrc": "1993:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1993:47:6"
														},
														{
															"nativeSrc": "2049:139:6",
															"nodeType": "YulAssignment",
															"src": "2049:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2183:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2183:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2057:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "2057:124:6"
																},
																"nativeSrc": "2057:131:6",
																"nodeType": "YulFunctionCall",
																"src": "2057:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2049:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2049:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1776:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1927:9:6",
														"nodeType": "YulTypedName",
														"src": "1927:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1942:4:6",
														"nodeType": "YulTypedName",
														"src": "1942:4:6",
														"type": ""
													}
												],
												"src": "1776:419:6"
											},
											{
												"body": {
													"nativeSrc": "2246:51:6",
													"nodeType": "YulBlock",
													"src": "2246:51:6",
													"statements": [
														{
															"nativeSrc": "2256:35:6",
															"nodeType": "YulAssignment",
															"src": "2256:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2285:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2285:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2267:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2267:17:6"
																},
																"nativeSrc": "2267:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2267:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2256:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2256:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2201:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2228:5:6",
														"nodeType": "YulTypedName",
														"src": "2228:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2238:7:6",
														"nodeType": "YulTypedName",
														"src": "2238:7:6",
														"type": ""
													}
												],
												"src": "2201:96:6"
											},
											{
												"body": {
													"nativeSrc": "2368:53:6",
													"nodeType": "YulBlock",
													"src": "2368:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2385:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2385:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2408:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2408:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2390:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2390:17:6"
																		},
																		"nativeSrc": "2390:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2390:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2378:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2378:6:6"
																},
																"nativeSrc": "2378:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2378:37:6"
															},
															"nativeSrc": "2378:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2378:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2303:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2356:5:6",
														"nodeType": "YulTypedName",
														"src": "2356:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2363:3:6",
														"nodeType": "YulTypedName",
														"src": "2363:3:6",
														"type": ""
													}
												],
												"src": "2303:118:6"
											},
											{
												"body": {
													"nativeSrc": "2553:206:6",
													"nodeType": "YulBlock",
													"src": "2553:206:6",
													"statements": [
														{
															"nativeSrc": "2563:26:6",
															"nodeType": "YulAssignment",
															"src": "2563:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2575:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2575:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2586:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2586:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2571:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2571:3:6"
																},
																"nativeSrc": "2571:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2571:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2563:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2563:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2643:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2643:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2656:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2667:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2667:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:6"
																		},
																		"nativeSrc": "2652:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2652:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2599:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2599:43:6"
																},
																"nativeSrc": "2599:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2599:71:6"
															},
															"nativeSrc": "2599:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2599:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2724:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2724:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2737:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2737:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2748:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2748:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:6"
																		},
																		"nativeSrc": "2733:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2733:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2680:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2680:43:6"
																},
																"nativeSrc": "2680:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2680:72:6"
															},
															"nativeSrc": "2680:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2680:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "2427:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2517:9:6",
														"nodeType": "YulTypedName",
														"src": "2517:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2529:6:6",
														"nodeType": "YulTypedName",
														"src": "2529:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2537:6:6",
														"nodeType": "YulTypedName",
														"src": "2537:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2548:4:6",
														"nodeType": "YulTypedName",
														"src": "2548:4:6",
														"type": ""
													}
												],
												"src": "2427:332:6"
											},
											{
												"body": {
													"nativeSrc": "2805:35:6",
													"nodeType": "YulBlock",
													"src": "2805:35:6",
													"statements": [
														{
															"nativeSrc": "2815:19:6",
															"nodeType": "YulAssignment",
															"src": "2815:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2831:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2831:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2825:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2825:5:6"
																},
																"nativeSrc": "2825:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2825:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2815:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2815:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2765:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2798:6:6",
														"nodeType": "YulTypedName",
														"src": "2798:6:6",
														"type": ""
													}
												],
												"src": "2765:75:6"
											},
											{
												"body": {
													"nativeSrc": "2935:28:6",
													"nodeType": "YulBlock",
													"src": "2935:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2952:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2952:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2955:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2955:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2945:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:6"
																},
																"nativeSrc": "2945:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2945:12:6"
															},
															"nativeSrc": "2945:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2945:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2846:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2846:117:6"
											},
											{
												"body": {
													"nativeSrc": "3058:28:6",
													"nodeType": "YulBlock",
													"src": "3058:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3078:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3078:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3068:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:6"
																},
																"nativeSrc": "3068:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3068:12:6"
															},
															"nativeSrc": "3068:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "3068:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2969:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2969:117:6"
											},
											{
												"body": {
													"nativeSrc": "3137:32:6",
													"nodeType": "YulBlock",
													"src": "3137:32:6",
													"statements": [
														{
															"nativeSrc": "3147:16:6",
															"nodeType": "YulAssignment",
															"src": "3147:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "3158:5:6",
																"nodeType": "YulIdentifier",
																"src": "3158:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3147:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3147:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3092:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3119:5:6",
														"nodeType": "YulTypedName",
														"src": "3119:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3129:7:6",
														"nodeType": "YulTypedName",
														"src": "3129:7:6",
														"type": ""
													}
												],
												"src": "3092:77:6"
											},
											{
												"body": {
													"nativeSrc": "3218:79:6",
													"nodeType": "YulBlock",
													"src": "3218:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3275:16:6",
																"nodeType": "YulBlock",
																"src": "3275:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3284:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3287:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3277:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:6"
																			},
																			"nativeSrc": "3277:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3277:12:6"
																		},
																		"nativeSrc": "3277:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3241:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3241:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3266:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3266:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3248:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3248:17:6"
																				},
																				"nativeSrc": "3248:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3248:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3238:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3238:2:6"
																		},
																		"nativeSrc": "3238:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3238:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3231:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:6"
																},
																"nativeSrc": "3231:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3231:43:6"
															},
															"nativeSrc": "3228:63:6",
															"nodeType": "YulIf",
															"src": "3228:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3175:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3211:5:6",
														"nodeType": "YulTypedName",
														"src": "3211:5:6",
														"type": ""
													}
												],
												"src": "3175:122:6"
											},
											{
												"body": {
													"nativeSrc": "3366:80:6",
													"nodeType": "YulBlock",
													"src": "3366:80:6",
													"statements": [
														{
															"nativeSrc": "3376:22:6",
															"nodeType": "YulAssignment",
															"src": "3376:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3391:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3391:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3385:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3385:5:6"
																},
																"nativeSrc": "3385:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3385:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3376:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3376:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3434:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3434:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3407:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3407:26:6"
																},
																"nativeSrc": "3407:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3407:33:6"
															},
															"nativeSrc": "3407:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3407:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3303:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3344:6:6",
														"nodeType": "YulTypedName",
														"src": "3344:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3352:3:6",
														"nodeType": "YulTypedName",
														"src": "3352:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3360:5:6",
														"nodeType": "YulTypedName",
														"src": "3360:5:6",
														"type": ""
													}
												],
												"src": "3303:143:6"
											},
											{
												"body": {
													"nativeSrc": "3529:274:6",
													"nodeType": "YulBlock",
													"src": "3529:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3575:83:6",
																"nodeType": "YulBlock",
																"src": "3575:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3577:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3577:77:6"
																			},
																			"nativeSrc": "3577:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3577:79:6"
																		},
																		"nativeSrc": "3577:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3577:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3550:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3550:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3559:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3559:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3546:3:6"
																		},
																		"nativeSrc": "3546:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3546:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3571:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3571:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3542:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3542:3:6"
																},
																"nativeSrc": "3542:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3542:32:6"
															},
															"nativeSrc": "3539:119:6",
															"nodeType": "YulIf",
															"src": "3539:119:6"
														},
														{
															"nativeSrc": "3668:128:6",
															"nodeType": "YulBlock",
															"src": "3668:128:6",
															"statements": [
																{
																	"nativeSrc": "3683:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3683:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3697:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3697:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3687:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3687:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3712:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3712:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3758:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3758:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3769:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3769:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3754:3:6"
																				},
																				"nativeSrc": "3754:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3754:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3722:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3722:31:6"
																		},
																		"nativeSrc": "3722:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3712:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3712:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3452:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3499:9:6",
														"nodeType": "YulTypedName",
														"src": "3499:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3510:7:6",
														"nodeType": "YulTypedName",
														"src": "3510:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3522:6:6",
														"nodeType": "YulTypedName",
														"src": "3522:6:6",
														"type": ""
													}
												],
												"src": "3452:351:6"
											},
											{
												"body": {
													"nativeSrc": "3915:132:6",
													"nodeType": "YulBlock",
													"src": "3915:132:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3937:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3937:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3945:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3945:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3933:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:6"
																		},
																		"nativeSrc": "3933:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3933:14:6"
																	},
																	{
																		"hexValue": "20596f75206d75736820616c6c6f77207468697320636f6e747261637420746f",
																		"kind": "string",
																		"nativeSrc": "3949:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3949:34:6",
																		"type": "",
																		"value": " You mush allow this contract to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3926:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:6"
																},
																"nativeSrc": "3926:58:6",
																"nodeType": "YulFunctionCall",
																"src": "3926:58:6"
															},
															"nativeSrc": "3926:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "3926:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4005:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4005:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4013:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4013:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:6"
																		},
																		"nativeSrc": "4001:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:15:6"
																	},
																	{
																		"hexValue": "206174206c65617374206f6e6520746f6b656e",
																		"kind": "string",
																		"nativeSrc": "4018:21:6",
																		"nodeType": "YulLiteral",
																		"src": "4018:21:6",
																		"type": "",
																		"value": " at least one token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:6"
																},
																"nativeSrc": "3994:46:6",
																"nodeType": "YulFunctionCall",
																"src": "3994:46:6"
															},
															"nativeSrc": "3994:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "3994:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0",
												"nativeSrc": "3809:238:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3907:6:6",
														"nodeType": "YulTypedName",
														"src": "3907:6:6",
														"type": ""
													}
												],
												"src": "3809:238:6"
											},
											{
												"body": {
													"nativeSrc": "4199:220:6",
													"nodeType": "YulBlock",
													"src": "4199:220:6",
													"statements": [
														{
															"nativeSrc": "4209:74:6",
															"nodeType": "YulAssignment",
															"src": "4209:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4275:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4275:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4280:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4280:2:6",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4216:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4216:58:6"
																},
																"nativeSrc": "4216:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4216:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4209:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4381:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4381:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0",
																	"nativeSrc": "4292:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4292:88:6"
																},
																"nativeSrc": "4292:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4292:93:6"
															},
															"nativeSrc": "4292:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4292:93:6"
														},
														{
															"nativeSrc": "4394:19:6",
															"nodeType": "YulAssignment",
															"src": "4394:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4405:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4405:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4410:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4410:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4401:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:6"
																},
																"nativeSrc": "4401:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4401:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4394:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4053:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4187:3:6",
														"nodeType": "YulTypedName",
														"src": "4187:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4195:3:6",
														"nodeType": "YulTypedName",
														"src": "4195:3:6",
														"type": ""
													}
												],
												"src": "4053:366:6"
											},
											{
												"body": {
													"nativeSrc": "4596:248:6",
													"nodeType": "YulBlock",
													"src": "4596:248:6",
													"statements": [
														{
															"nativeSrc": "4606:26:6",
															"nodeType": "YulAssignment",
															"src": "4606:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4618:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4618:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4629:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4614:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4614:3:6"
																},
																"nativeSrc": "4614:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4614:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4606:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4606:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4653:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4653:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4664:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4664:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4649:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4649:3:6"
																		},
																		"nativeSrc": "4649:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4649:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4672:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4672:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4678:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4678:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4668:3:6"
																		},
																		"nativeSrc": "4668:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4668:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4642:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:6"
																},
																"nativeSrc": "4642:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4642:47:6"
															},
															"nativeSrc": "4642:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4642:47:6"
														},
														{
															"nativeSrc": "4698:139:6",
															"nodeType": "YulAssignment",
															"src": "4698:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4832:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4832:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4706:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4706:124:6"
																},
																"nativeSrc": "4706:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4706:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4698:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4698:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4425:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4576:9:6",
														"nodeType": "YulTypedName",
														"src": "4576:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4591:4:6",
														"nodeType": "YulTypedName",
														"src": "4591:4:6",
														"type": ""
													}
												],
												"src": "4425:419:6"
											},
											{
												"body": {
													"nativeSrc": "4915:53:6",
													"nodeType": "YulBlock",
													"src": "4915:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4932:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4932:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4955:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4955:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4937:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4937:17:6"
																		},
																		"nativeSrc": "4937:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4937:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4925:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:6"
																},
																"nativeSrc": "4925:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4925:37:6"
															},
															"nativeSrc": "4925:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4925:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4850:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4903:5:6",
														"nodeType": "YulTypedName",
														"src": "4903:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4910:3:6",
														"nodeType": "YulTypedName",
														"src": "4910:3:6",
														"type": ""
													}
												],
												"src": "4850:118:6"
											},
											{
												"body": {
													"nativeSrc": "5128:288:6",
													"nodeType": "YulBlock",
													"src": "5128:288:6",
													"statements": [
														{
															"nativeSrc": "5138:26:6",
															"nodeType": "YulAssignment",
															"src": "5138:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5150:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5150:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5161:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5146:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5146:3:6"
																},
																"nativeSrc": "5146:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5146:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5138:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5138:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5218:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5218:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5231:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5231:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5242:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5242:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5227:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5227:3:6"
																		},
																		"nativeSrc": "5227:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5227:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5174:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5174:43:6"
																},
																"nativeSrc": "5174:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5174:71:6"
															},
															"nativeSrc": "5174:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5174:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5323:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5323:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5308:3:6"
																		},
																		"nativeSrc": "5308:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5308:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5255:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5255:43:6"
																},
																"nativeSrc": "5255:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5255:72:6"
															},
															"nativeSrc": "5255:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5255:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5381:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5381:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5394:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5394:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5405:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5405:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5390:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5390:3:6"
																		},
																		"nativeSrc": "5390:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5390:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5337:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5337:43:6"
																},
																"nativeSrc": "5337:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5337:72:6"
															},
															"nativeSrc": "5337:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5337:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4974:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5084:9:6",
														"nodeType": "YulTypedName",
														"src": "5084:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5096:6:6",
														"nodeType": "YulTypedName",
														"src": "5096:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5104:6:6",
														"nodeType": "YulTypedName",
														"src": "5104:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5112:6:6",
														"nodeType": "YulTypedName",
														"src": "5112:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5123:4:6",
														"nodeType": "YulTypedName",
														"src": "5123:4:6",
														"type": ""
													}
												],
												"src": "4974:442:6"
											},
											{
												"body": {
													"nativeSrc": "5464:48:6",
													"nodeType": "YulBlock",
													"src": "5464:48:6",
													"statements": [
														{
															"nativeSrc": "5474:32:6",
															"nodeType": "YulAssignment",
															"src": "5474:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5499:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5499:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5492:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5492:6:6"
																		},
																		"nativeSrc": "5492:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5485:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:6"
																},
																"nativeSrc": "5485:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5485:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5474:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5474:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5422:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5446:5:6",
														"nodeType": "YulTypedName",
														"src": "5446:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5456:7:6",
														"nodeType": "YulTypedName",
														"src": "5456:7:6",
														"type": ""
													}
												],
												"src": "5422:90:6"
											},
											{
												"body": {
													"nativeSrc": "5558:76:6",
													"nodeType": "YulBlock",
													"src": "5558:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5612:16:6",
																"nodeType": "YulBlock",
																"src": "5612:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5621:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5621:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5624:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5624:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5614:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5614:6:6"
																			},
																			"nativeSrc": "5614:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5614:12:6"
																		},
																		"nativeSrc": "5614:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5614:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5581:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5581:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5603:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5603:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5588:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "5588:14:6"
																				},
																				"nativeSrc": "5588:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5588:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5578:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5578:2:6"
																		},
																		"nativeSrc": "5578:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5578:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5571:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5571:6:6"
																},
																"nativeSrc": "5571:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5571:40:6"
															},
															"nativeSrc": "5568:60:6",
															"nodeType": "YulIf",
															"src": "5568:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5518:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5551:5:6",
														"nodeType": "YulTypedName",
														"src": "5551:5:6",
														"type": ""
													}
												],
												"src": "5518:116:6"
											},
											{
												"body": {
													"nativeSrc": "5700:77:6",
													"nodeType": "YulBlock",
													"src": "5700:77:6",
													"statements": [
														{
															"nativeSrc": "5710:22:6",
															"nodeType": "YulAssignment",
															"src": "5710:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5725:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5725:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5719:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5719:5:6"
																},
																"nativeSrc": "5719:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5719:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5710:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5710:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5765:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5765:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5741:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "5741:23:6"
																},
																"nativeSrc": "5741:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5741:30:6"
															},
															"nativeSrc": "5741:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5741:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5640:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5678:6:6",
														"nodeType": "YulTypedName",
														"src": "5678:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5686:3:6",
														"nodeType": "YulTypedName",
														"src": "5686:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5694:5:6",
														"nodeType": "YulTypedName",
														"src": "5694:5:6",
														"type": ""
													}
												],
												"src": "5640:137:6"
											},
											{
												"body": {
													"nativeSrc": "5857:271:6",
													"nodeType": "YulBlock",
													"src": "5857:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5903:83:6",
																"nodeType": "YulBlock",
																"src": "5903:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5905:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5905:77:6"
																			},
																			"nativeSrc": "5905:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5905:79:6"
																		},
																		"nativeSrc": "5905:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5905:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5878:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5878:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5887:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5887:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5874:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:6"
																		},
																		"nativeSrc": "5874:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5874:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5899:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5899:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5870:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5870:3:6"
																},
																"nativeSrc": "5870:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5870:32:6"
															},
															"nativeSrc": "5867:119:6",
															"nodeType": "YulIf",
															"src": "5867:119:6"
														},
														{
															"nativeSrc": "5996:125:6",
															"nodeType": "YulBlock",
															"src": "5996:125:6",
															"statements": [
																{
																	"nativeSrc": "6011:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6011:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6025:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6025:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6015:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6015:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6040:71:6",
																	"nodeType": "YulAssignment",
																	"src": "6040:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6083:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6083:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6094:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6094:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6079:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6079:3:6"
																				},
																				"nativeSrc": "6079:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6079:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6103:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6103:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6050:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6050:28:6"
																		},
																		"nativeSrc": "6050:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6040:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6040:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5783:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5827:9:6",
														"nodeType": "YulTypedName",
														"src": "5827:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5838:7:6",
														"nodeType": "YulTypedName",
														"src": "5838:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5850:6:6",
														"nodeType": "YulTypedName",
														"src": "5850:6:6",
														"type": ""
													}
												],
												"src": "5783:345:6"
											},
											{
												"body": {
													"nativeSrc": "6240:58:6",
													"nodeType": "YulBlock",
													"src": "6240:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6262:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6262:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6270:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6270:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6258:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6258:3:6"
																		},
																		"nativeSrc": "6258:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:14:6"
																	},
																	{
																		"hexValue": "6661696c656420746f2073656e64",
																		"kind": "string",
																		"nativeSrc": "6274:16:6",
																		"nodeType": "YulLiteral",
																		"src": "6274:16:6",
																		"type": "",
																		"value": "failed to send"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6251:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6251:6:6"
																},
																"nativeSrc": "6251:40:6",
																"nodeType": "YulFunctionCall",
																"src": "6251:40:6"
															},
															"nativeSrc": "6251:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "6251:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a",
												"nativeSrc": "6134:164:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6232:6:6",
														"nodeType": "YulTypedName",
														"src": "6232:6:6",
														"type": ""
													}
												],
												"src": "6134:164:6"
											},
											{
												"body": {
													"nativeSrc": "6450:220:6",
													"nodeType": "YulBlock",
													"src": "6450:220:6",
													"statements": [
														{
															"nativeSrc": "6460:74:6",
															"nodeType": "YulAssignment",
															"src": "6460:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6526:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6526:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6531:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6531:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6467:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6467:58:6"
																},
																"nativeSrc": "6467:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6467:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6460:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6460:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6632:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6632:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a",
																	"nativeSrc": "6543:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6543:88:6"
																},
																"nativeSrc": "6543:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6543:93:6"
															},
															"nativeSrc": "6543:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6543:93:6"
														},
														{
															"nativeSrc": "6645:19:6",
															"nodeType": "YulAssignment",
															"src": "6645:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6656:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6656:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6661:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6661:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6652:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6652:3:6"
																},
																"nativeSrc": "6652:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6652:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6645:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6304:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6438:3:6",
														"nodeType": "YulTypedName",
														"src": "6438:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6446:3:6",
														"nodeType": "YulTypedName",
														"src": "6446:3:6",
														"type": ""
													}
												],
												"src": "6304:366:6"
											},
											{
												"body": {
													"nativeSrc": "6847:248:6",
													"nodeType": "YulBlock",
													"src": "6847:248:6",
													"statements": [
														{
															"nativeSrc": "6857:26:6",
															"nodeType": "YulAssignment",
															"src": "6857:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6869:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6869:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6880:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6880:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6865:3:6"
																},
																"nativeSrc": "6865:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6865:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6857:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6857:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6904:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6904:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6915:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6915:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6900:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6900:3:6"
																		},
																		"nativeSrc": "6900:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6900:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6923:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6923:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6929:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6919:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:6"
																		},
																		"nativeSrc": "6919:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6919:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6893:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6893:6:6"
																},
																"nativeSrc": "6893:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6893:47:6"
															},
															"nativeSrc": "6893:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6893:47:6"
														},
														{
															"nativeSrc": "6949:139:6",
															"nodeType": "YulAssignment",
															"src": "6949:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7083:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7083:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6957:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6957:124:6"
																},
																"nativeSrc": "6957:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6957:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6949:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6949:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6676:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6827:9:6",
														"nodeType": "YulTypedName",
														"src": "6827:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6842:4:6",
														"nodeType": "YulTypedName",
														"src": "6842:4:6",
														"type": ""
													}
												],
												"src": "6676:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0(memPtr) {\n\n        mstore(add(memPtr, 0), \" You mush allow this contract to\")\n\n        mstore(add(memPtr, 32), \" at least one token\")\n\n    }\n\n    function abi_encode_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to send\")\n\n    }\n\n    function abi_encode_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80634571007414610038578063b3fc0d7b14610042575b5f80fd5b610040610060565b005b61004a6102b2565b604051610057919061034f565b60405180910390f35b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e6906103c2565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161014b929190610400565b602060405180830381865afa158015610166573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061018a919061045e565b90505f81116101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c5906104f9565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161022c93929190610526565b6020604051808303815f875af1158015610248573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026c9190610590565b9050806102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a590610605565b60405180910390fd5b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61031761031261030d846102d5565b6102f4565b6102d5565b9050919050565b5f610328826102fd565b9050919050565b5f6103398261031e565b9050919050565b6103498161032f565b82525050565b5f6020820190506103625f830184610340565b92915050565b5f82825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e657200000000000000000000005f82015250565b5f6103ac601583610368565b91506103b782610378565b602082019050919050565b5f6020820190508181035f8301526103d9816103a0565b9050919050565b5f6103ea826102d5565b9050919050565b6103fa816103e0565b82525050565b5f6040820190506104135f8301856103f1565b61042060208301846103f1565b9392505050565b5f80fd5b5f819050919050565b61043d8161042b565b8114610447575f80fd5b50565b5f8151905061045881610434565b92915050565b5f6020828403121561047357610472610427565b5b5f6104808482850161044a565b91505092915050565b7f20596f75206d75736820616c6c6f77207468697320636f6e747261637420746f5f8201527f206174206c65617374206f6e6520746f6b656e00000000000000000000000000602082015250565b5f6104e3603383610368565b91506104ee82610489565b604082019050919050565b5f6020820190508181035f830152610510816104d7565b9050919050565b6105208161042b565b82525050565b5f6060820190506105395f8301866103f1565b61054660208301856103f1565b6105536040830184610517565b949350505050565b5f8115159050919050565b61056f8161055b565b8114610579575f80fd5b50565b5f8151905061058a81610566565b92915050565b5f602082840312156105a5576105a4610427565b5b5f6105b28482850161057c565b91505092915050565b7f6661696c656420746f2073656e640000000000000000000000000000000000005f82015250565b5f6105ef600e83610368565b91506105fa826105bb565b602082019050919050565b5f6020820190508181035f83015261061c816105e3565b905091905056fea26469706673582212209d267aca20e904c32fb1bac3e23e4b9e68dbd4159f0d363d96c5f5a9ab335b2664736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45710074 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xB3FC0D7B EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B SWAP3 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP1 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x248 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x590 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP1 PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x317 PUSH2 0x312 PUSH2 0x30D DUP5 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x328 DUP3 PUSH2 0x2FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x339 DUP3 PUSH2 0x31E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349 DUP2 PUSH2 0x32F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x362 PUSH0 DUP4 ADD DUP5 PUSH2 0x340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3AC PUSH1 0x15 DUP4 PUSH2 0x368 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B7 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3D9 DUP2 PUSH2 0x3A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3EA DUP3 PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FA DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x413 PUSH0 DUP4 ADD DUP6 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x420 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x42B JUMP JUMPDEST DUP2 EQ PUSH2 0x447 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x458 DUP2 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x473 JUMPI PUSH2 0x472 PUSH2 0x427 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x480 DUP5 DUP3 DUP6 ADD PUSH2 0x44A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x20596F75206D75736820616C6C6F77207468697320636F6E747261637420746F PUSH0 DUP3 ADD MSTORE PUSH32 0x206174206C65617374206F6E6520746F6B656E00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E3 PUSH1 0x33 DUP4 PUSH2 0x368 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EE DUP3 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x510 DUP2 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x520 DUP2 PUSH2 0x42B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x539 PUSH0 DUP4 ADD DUP7 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x546 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x553 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x517 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56F DUP2 PUSH2 0x55B JUMP JUMPDEST DUP2 EQ PUSH2 0x579 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x58A DUP2 PUSH2 0x566 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A5 JUMPI PUSH2 0x5A4 PUSH2 0x427 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5B2 DUP5 DUP3 DUP6 ADD PUSH2 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2073656E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5EF PUSH1 0xE DUP4 PUSH2 0x368 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FA DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x61C DUP2 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0x26 PUSH27 0xCA20E904C32FB1BAC3E23E4B9E68DBD4159F0D363D96C5F5A9AB33 JUMPDEST 0x26 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "126:1052:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:347;;;:::i;:::-;;148:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;826:347;599:5;;;;;;;;;;;585:19;;:10;:19;;;577:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;877:14:::1;894:15:::0;::::1;;;;;;;;;;:25;;;920:10;940:4;894:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;877:69;;977:1;965:9;:13;957:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1045:9;1057:15:::0;::::1;;;;;;;;;;:28;;;1086:10;1106:4;1113:9;1057:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1045:78;;1142:4;1134:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;866:307;;826:347::o:0;148:29::-;;;;;;;;;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:169::-;1136:11;1170:6;1165:3;1158:19;1210:4;1205:3;1201:14;1186:29;;1052:169;;;;:::o;1227:171::-;1367:23;1363:1;1355:6;1351:14;1344:47;1227:171;:::o;1404:366::-;1546:3;1567:67;1631:2;1626:3;1567:67;:::i;:::-;1560:74;;1643:93;1732:3;1643:93;:::i;:::-;1761:2;1756:3;1752:12;1745:19;;1404:366;;;:::o;1776:419::-;1942:4;1980:2;1969:9;1965:18;1957:26;;2029:9;2023:4;2019:20;2015:1;2004:9;2000:17;1993:47;2057:131;2183:4;2057:131;:::i;:::-;2049:139;;1776:419;;;:::o;2201:96::-;2238:7;2267:24;2285:5;2267:24;:::i;:::-;2256:35;;2201:96;;;:::o;2303:118::-;2390:24;2408:5;2390:24;:::i;:::-;2385:3;2378:37;2303:118;;:::o;2427:332::-;2548:4;2586:2;2575:9;2571:18;2563:26;;2599:71;2667:1;2656:9;2652:17;2643:6;2599:71;:::i;:::-;2680:72;2748:2;2737:9;2733:18;2724:6;2680:72;:::i;:::-;2427:332;;;;;:::o;2846:117::-;2955:1;2952;2945:12;3092:77;3129:7;3158:5;3147:16;;3092:77;;;:::o;3175:122::-;3248:24;3266:5;3248:24;:::i;:::-;3241:5;3238:35;3228:63;;3287:1;3284;3277:12;3228:63;3175:122;:::o;3303:143::-;3360:5;3391:6;3385:13;3376:22;;3407:33;3434:5;3407:33;:::i;:::-;3303:143;;;;:::o;3452:351::-;3522:6;3571:2;3559:9;3550:7;3546:23;3542:32;3539:119;;;3577:79;;:::i;:::-;3539:119;3697:1;3722:64;3778:7;3769:6;3758:9;3754:22;3722:64;:::i;:::-;3712:74;;3668:128;3452:351;;;;:::o;3809:238::-;3949:34;3945:1;3937:6;3933:14;3926:58;4018:21;4013:2;4005:6;4001:15;3994:46;3809:238;:::o;4053:366::-;4195:3;4216:67;4280:2;4275:3;4216:67;:::i;:::-;4209:74;;4292:93;4381:3;4292:93;:::i;:::-;4410:2;4405:3;4401:12;4394:19;;4053:366;;;:::o;4425:419::-;4591:4;4629:2;4618:9;4614:18;4606:26;;4678:9;4672:4;4668:20;4664:1;4653:9;4649:17;4642:47;4706:131;4832:4;4706:131;:::i;:::-;4698:139;;4425:419;;;:::o;4850:118::-;4937:24;4955:5;4937:24;:::i;:::-;4932:3;4925:37;4850:118;;:::o;4974:442::-;5123:4;5161:2;5150:9;5146:18;5138:26;;5174:71;5242:1;5231:9;5227:17;5218:6;5174:71;:::i;:::-;5255:72;5323:2;5312:9;5308:18;5299:6;5255:72;:::i;:::-;5337;5405:2;5394:9;5390:18;5381:6;5337:72;:::i;:::-;4974:442;;;;;;:::o;5422:90::-;5456:7;5499:5;5492:13;5485:21;5474:32;;5422:90;;;:::o;5518:116::-;5588:21;5603:5;5588:21;:::i;:::-;5581:5;5578:32;5568:60;;5624:1;5621;5614:12;5568:60;5518:116;:::o;5640:137::-;5694:5;5725:6;5719:13;5710:22;;5741:30;5765:5;5741:30;:::i;:::-;5640:137;;;;:::o;5783:345::-;5850:6;5899:2;5887:9;5878:7;5874:23;5870:32;5867:119;;;5905:79;;:::i;:::-;5867:119;6025:1;6050:61;6103:7;6094:6;6083:9;6079:22;6050:61;:::i;:::-;6040:71;;5996:125;5783:345;;;;:::o;6134:164::-;6274:16;6270:1;6262:6;6258:14;6251:40;6134:164;:::o;6304:366::-;6446:3;6467:67;6531:2;6526:3;6467:67;:::i;:::-;6460:74;;6543:93;6632:3;6543:93;:::i;:::-;6661:2;6656:3;6652:12;6645:19;;6304:366;;;:::o;6676:419::-;6842:4;6880:2;6869:9;6865:18;6857:26;;6929:9;6923:4;6919:20;6915:1;6904:9;6900:17;6893:47;6957:131;7083:4;6957:131;:::i;:::-;6949:139;;6676:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "325000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"associatedToken()": "infinite",
								"sell()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 1178,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 366,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 366,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 223,
									"end": 366,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 223,
									"end": 366,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 223,
									"end": 366,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 223,
									"end": 366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 223,
									"end": 366,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 304,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 280,
									"end": 295,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 295,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 280,
									"end": 304,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 280,
									"end": 304,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 280,
									"end": 304,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 280,
									"end": 304,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 323,
									"end": 333,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 315,
									"end": 320,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 315,
									"end": 320,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 333,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 315,
									"end": 333,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 315,
									"end": 333,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 315,
									"end": 333,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 315,
									"end": 333,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 352,
									"end": 358,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 344,
									"end": 349,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 358,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 344,
									"end": 358,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 344,
									"end": 358,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 344,
									"end": 358,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 223,
									"end": 366,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1173,
									"end": 1197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1171,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1163,
									"end": 1198,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1285,
									"end": 1290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1323,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1332,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1912,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1377,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1476,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1484,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1527,
									"end": 1529,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1515,
									"end": 1524,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1513,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1502,
									"end": 1525,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1498,
									"end": 1530,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1614,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1495,
									"end": 1614,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1533,
									"end": 1612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1612,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1495,
									"end": 1614,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1495,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1653,
									"end": 1654,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1678,
									"end": 1756,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1748,
									"end": 1755,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1745,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1728,
									"end": 1737,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1724,
									"end": 1746,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1756,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1678,
									"end": 1756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1756,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1678,
									"end": 1756,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1756,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1756,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1807,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1831,
									"end": 1895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1887,
									"end": 1894,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1878,
									"end": 1884,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1867,
									"end": 1876,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1863,
									"end": 1885,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1831,
									"end": 1895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1895,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1831,
									"end": 1895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1895,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1895,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1905,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1912,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1912,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1912,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 1178,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d267aca20e904c32fb1bac3e23e4b9e68dbd4159f0d363d96c5f5a9ab335b2664736f6c63430008160033",
									".code": [
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "45710074"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "B3FC0D7B"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 1178,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 826,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 148,
											"end": 177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 148,
											"end": 177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 826,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 599,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 599,
											"end": 604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 599,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 599,
											"end": 604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 599,
											"end": 604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 599,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 599,
											"end": 604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 585,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 585,
											"end": 595,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 585,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 585,
											"end": 604,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 577,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 577,
											"end": 630,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 577,
											"end": 630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 909,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 909,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 894,
											"end": 919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 920,
											"end": 930,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 940,
											"end": 944,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 894,
											"end": 946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 894,
											"end": 946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 877,
											"end": 946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 877,
											"end": 946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 977,
											"end": 978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 965,
											"end": 978,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 1034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 957,
											"end": 1034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1057,
											"end": 1072,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1057,
											"end": 1085,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1086,
											"end": 1096,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1106,
											"end": 1110,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1122,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1057,
											"end": 1123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1123,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1057,
											"end": 1123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1057,
											"end": 1123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1146,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1134,
											"end": 1165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1134,
											"end": 1165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 866,
											"end": 1173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 866,
											"end": 1173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 826,
											"end": 1173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 148,
											"end": 177,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 148,
											"end": 177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1221,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1214,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1221,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1227,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1390,
											"name": "PUSH",
											"source": 6,
											"value": "596F7520617265206E6F7420746865206F776E65720000000000000000000000"
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1391,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1770,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1404,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1626,
											"end": 1629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1567,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1634,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1567,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1732,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1643,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1736,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1643,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 2195,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1776,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1969,
											"end": 1978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1965,
											"end": 1983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2039,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2057,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2188,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2057,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 2195,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 2195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 2195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 2195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2297,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2201,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2267,
											"end": 2291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2303,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2390,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2414,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2390,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2388,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2759,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2427,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2599,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2670,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2599,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2748,
											"end": 2750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2730,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2680,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2752,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2680,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2759,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2759,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2963,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2846,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2957,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3297,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3175,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3248,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3248,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3228,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3398,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3407,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3407,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3803,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3452,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3573,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3557,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3569,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3574,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3539,
											"end": 3658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3577,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3577,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3656,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3577,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3658,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3539,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3722,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3786,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3722,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3786,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3786,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3803,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3803,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 4047,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3809,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "20596F75206D75736820616C6C6F77207468697320636F6E747261637420746F"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3943,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4039,
											"name": "PUSH",
											"source": 6,
											"value": "206174206C65617374206F6E6520746F6B656E00000000000000000000000000"
										},
										{
											"begin": 4013,
											"end": 4015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4005,
											"end": 4011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4040,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 4047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4419,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4053,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4283,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4216,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4381,
											"end": 4384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4292,
											"end": 4385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4385,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4292,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4401,
											"end": 4413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4844,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4425,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4687,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4688,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4706,
											"end": 4837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4837,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4706,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 4837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4955,
											"end": 4960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4937,
											"end": 4961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5150,
											"end": 5159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5242,
											"end": 5243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5224,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5174,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5245,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5174,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5323,
											"end": 5325,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5312,
											"end": 5321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5255,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5255,
											"end": 5327,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5255,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5403,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5387,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5337,
											"end": 5409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5409,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5337,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5512,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5422,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5505,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5506,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5634,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5518,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5588,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5588,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5578,
											"end": 5610,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5626,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5568,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5518,
											"end": 5634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5777,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 5640,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5719,
											"end": 5732,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 5732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 5732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5765,
											"end": 5770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5741,
											"end": 5771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 6128,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5783,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5850,
											"end": 5856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5887,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5885,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5897,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5867,
											"end": 5986,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5867,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5867,
											"end": 5986,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5905,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5867,
											"end": 5986,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5867,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 6100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6092,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 6050,
											"end": 6111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6111,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6050,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6040,
											"end": 6111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 6128,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 6128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 6128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6134,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6274,
											"end": 6290,
											"name": "PUSH",
											"source": 6,
											"value": "6661696C656420746F2073656E64000000000000000000000000000000000000"
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6251,
											"end": 6291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6670,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6304,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6446,
											"end": 6449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6531,
											"end": 6533,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6526,
											"end": 6529,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6534,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6467,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6460,
											"end": 6534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6632,
											"end": 6635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6543,
											"end": 6636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6636,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6543,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6661,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6656,
											"end": 6659,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 6664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7095,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 6676,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6869,
											"end": 6878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6857,
											"end": 6883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6857,
											"end": 6883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 6927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6939,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6915,
											"end": 6916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6913,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6900,
											"end": 6917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6893,
											"end": 6940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6957,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7083,
											"end": 7087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6957,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6957,
											"end": 7088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6957,
											"end": 7088,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6957,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 7088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6676,
											"end": 7095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CAC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"associatedToken()": "b3fc0d7b",
							"sell()": "45710074"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"associatedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CAC.sol\":\"CAC\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CAC.sol\":{\"keccak256\":\"0xee7c49d9948c0025866219d0e44c082cc2ac5c757d4c629f6f2c1bddf1740179\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://474e5504e09afbcdda9dc16de61aef97cb40bc28d957533a3098d5fe5b6b05c8\",\"dweb:/ipfs/QmY46AP3Q2S2ZcK5KMoHjaUZkB2KK6KqrWQwJKMHPg4deK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 791,
								"contract": "contracts/CAC.sol:CAC",
								"label": "associatedToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 793,
								"contract": "contracts/CAC.sol:CAC",
								"label": "price",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 795,
								"contract": "contracts/CAC.sol:CAC",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/CAC.sol": {
				"ast": {
					"absolutePath": "contracts/CAC.sol",
					"exportedSymbols": {
						"CAC": [
							873
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 874,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 874,
							"sourceUnit": 652,
							"src": "67:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CAC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 873,
							"linearizedBaseContracts": [
								873
							],
							"name": "CAC",
							"nameLocation": "135:3:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b3fc0d7b",
									"id": 791,
									"mutability": "mutable",
									"name": "associatedToken",
									"nameLocation": "162:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "148:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "IERC20",
											"nameLocations": [
												"148:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "148:6:5"
										},
										"referencedDeclaration": 729,
										"src": "148:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "189:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "184:10:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 792,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "184:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 795,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "209:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 873,
									"src": "201:13:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 794,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "201:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "269:97:5",
										"statements": [
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 803,
														"name": "associatedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "280:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 804,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "298:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "280:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "280:24:5"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "315:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 808,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "323:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "327:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "323:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "315:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "315:18:5"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "344:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 813,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "352:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "344:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "344:14:5"
											}
										]
									},
									"id": 817,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "242:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "IERC20",
														"nameLocations": [
															"235:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "235:6:5"
													},
													"referencedDeclaration": 729,
													"src": "235:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "255:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "250:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:28:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:0:5"
									},
									"scope": 873,
									"src": "223:143:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "566:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 820,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "585:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "589:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "585:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 822,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "599:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "585:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "606:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															},
															"value": "You are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															}
														],
														"id": 819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "577:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "577:53:5"
											},
											{
												"id": 827,
												"nodeType": "PlaceholderStatement",
												"src": "641:1:5"
											}
										]
									},
									"id": 829,
									"name": "onlyOwner",
									"nameLocation": "551:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:5"
									},
									"src": "542:108:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "866:307:5",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "882:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "877:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 834,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "877:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 838,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "920:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "924:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "920:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 842,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "940:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CAC_$873",
																		"typeString": "contract CAC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CAC_$873",
																		"typeString": "contract CAC"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "932:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 840,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "932:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "932:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 836,
															"name": "associatedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "894:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "910:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "894:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "877:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 847,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "965:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "977:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "965:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20596f75206d75736820616c6c6f77207468697320636f6e747261637420746f206174206c65617374206f6e6520746f6b656e",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "980:53:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0",
																"typeString": "literal_string \" You mush allow this contract to at least one token\""
															},
															"value": " You mush allow this contract to at least one token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_150aaa50c8e2722c7babb43a1de3f4f9f269658506747185bb504b35abc7f4f0",
																"typeString": "literal_string \" You mush allow this contract to at least one token\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "957:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "957:77:5"
											},
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1050:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "1045:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 853,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1045:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 857,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1086:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1090:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1086:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 861,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1106:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CAC_$873",
																		"typeString": "contract CAC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CAC_$873",
																		"typeString": "contract CAC"
																	}
																],
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1098:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 859,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1098:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1098:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "allowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "1113:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 855,
															"name": "associatedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1057:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1073:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "1057:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:78:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1142:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f2073656e64",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1148:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a",
																"typeString": "literal_string \"failed to send\""
															},
															"value": "failed to send"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbee596fbeff8a1e58c1bbe73677e2599b732e7ffee5a35000316f5e543a9a9a",
																"typeString": "literal_string \"failed to send\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1134:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "1134:31:5"
											}
										]
									},
									"functionSelector": "45710074",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 832,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 831,
												"name": "onlyOwner",
												"nameLocations": [
													"851:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 829,
												"src": "851:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "851:9:5"
										}
									],
									"name": "sell",
									"nameLocation": "835:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:5"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:0:5"
									},
									"scope": 873,
									"src": "826:347:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 874,
							"src": "126:1052:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:1138:5"
				},
				"id": 5
			}
		}
	}
}